{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "new-use-adf21"
		},
		"LS_AzureDataLakeStorage_appsource_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_AzureDataLakeStorage_appsource'"
		},
		"LS_AzureSqlDatabase_destination_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSqlDatabase_destination'"
		},
		"LS_AzureSqlDatabase_source_user_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_AzureSqlDatabase_source_user'"
		},
		"LS_dataflow_output_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_dataflow_output'"
		},
		"LS_datalake_github_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_datalake_github_sink'"
		},
		"LS_joins_left_source_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_joins_left_source'"
		},
		"LS_joins_right_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_joins_right'"
		},
		"LS_joins_right_source_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_joins_right_source'"
		},
		"LS_joins_right_sources_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_joins_right_sources'"
		},
		"LS_joins_sink_result_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_joins_sink_result'"
		},
		"LS_listfiles_source_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'LS_listfiles_source'"
		},
		"Ls_AzureDataLakeStorage_app_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'Ls_AzureDataLakeStorage_app_sink'"
		},
		"ls_joins_sink_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_joins_sink'"
		},
		"LS_AzureDataLakeStorage_appsource_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_dataflow_output_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_datalake_github_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_github_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://github.com"
		},
		"LS_joins_left_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_joins_right_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_joins_right_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_joins_right_sources_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_joins_sink_result_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"LS_listfiles_source_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"Ls_AzureDataLakeStorage_app_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		},
		"ls_joins_sink_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://adls4demo.dfs.core.windows.net"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Executing_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Executing the Pipeline",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "PL_logic_app_sending_email",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Send a email failed notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Executing the Pipeline",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-33.eastus.logic.azure.com:443/workflows/79d4cea7a4744cd7986edc12df72a75e/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=TlFeK0Y-XJBTH-SPRi_btvolWs0rVyg2vgPINIDbQFg",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"Data factory pipeline execution has failed\",\n\"Message\":\"Copydatalogic csv file activity has failed\",\n\n\"dataFactoryName\":\"@{pipeline().DataFactory}\",\n\"pipelineName\":\"@{pipeline().Pipeline}\",\n\"triggerName\":\"@{pipeline().TriggerName}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send a email success notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "Executing the Pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-33.eastus.logic.azure.com:443/workflows/79d4cea7a4744cd7986edc12df72a75e/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=TlFeK0Y-XJBTH-SPRi_btvolWs0rVyg2vgPINIDbQFg",
							"method": "POST",
							"headers": {},
							"body": {
								"value": "{\n\"Title\":\"copy activity pipeline has successfully executed\",\n\"Message\":\"Copydatalogic csv file activity executed successfully\",\n\n\"dataFactoryName\":\"@{pipeline().DataFactory}\",\n\"pipelineName\":\"@{pipeline().Pipeline}\",\n\"triggerName\":\"@{pipeline().TriggerName}\",\n\"Time\":\"@{utcnow()}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Logic_app"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-25T12:55:45Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_logic_app_sending_email')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_FullLoad')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy SQL data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_AzureSqlTable_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_AzureSqlTable_destination",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-25T06:59:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_source')]",
				"[concat(variables('factoryId'), '/datasets/DS_AzureSqlTable_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_conditional_split')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "conditional_df",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "conditional_split_df",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"DEFAULTsink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Dataflow_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T13:35:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/conditional_split_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_dataflow_aggregate')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy sales csv aggregates",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "aggregates_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"DataSource": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Dataflow_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-26T13:35:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/aggregates_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_http_github_source')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup list of files",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_listoffiles_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach files list",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup list of files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup list of files').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data from github to adls",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "HttpReadSettings",
												"requestMethod": "GET"
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_github_source",
											"type": "DatasetReference",
											"parameters": {
												"pRelativeGitURL": {
													"value": "@item().SourceRelativeURL",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_github_sink",
											"type": "DatasetReference",
											"parameters": {
												"pFilename": {
													"value": "@item().FileName",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "github_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-28T10:05:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_listoffiles_source')]",
				"[concat(variables('factoryId'), '/datasets/DS_github_source')]",
				"[concat(variables('factoryId'), '/datasets/DS_github_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_logic_app_sending_email')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copydatalogic",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "checking input",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Ds_DelimitedText_app_source",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Ds_DelimitedText_app_sink",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "checking input",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "Ds_DelimitedText_app_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Logic_app"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-25T12:55:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ds_DelimitedText_app_source')]",
				"[concat(variables('factoryId'), '/datasets/Ds_DelimitedText_app_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PL_selected_columns')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "columns selected_pl",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "select_columns_df",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"selectsales": {},
									"selectedcolumns": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Dataflow_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T09:14:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/select_columns_df')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/copy_list_of_files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "lookup_list_of_files",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DS_listoffiles_source",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_listoffiles",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "lookup_list_of_files",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('lookup_list_of_files').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Set variable URl",
									"type": "SetVariable",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"variableName": "relativeURL",
										"value": {
											"value": "@item().SourceRelativeURL",
											"type": "Expression"
										}
									}
								},
								{
									"name": "set variable file name",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Set variable URl",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"variableName": "filename",
										"value": {
											"value": "@item().FileName",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"relativeURL": {
						"type": "String"
					},
					"filename": {
						"type": "String"
					}
				},
				"folder": {
					"name": "github_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-28T10:05:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_listoffiles_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demo')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 5
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_for_joins')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Joins_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"leftinput": {},
									"rightinput": {},
									"joinsresults": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Dataflow_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T09:47:27Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Joins_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sorted')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sorted_pl",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Sortbysales",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Inputsource": {},
									"sortedsalessink": {},
									"sortedcountrysink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "pipelines_new/Dataflow_pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2022-04-27T09:14:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Sortbysales')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_destination')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase_destination",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Last_m",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "userData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase_destination')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_AzureSqlTable_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureSqlDatabase_source_user",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Key",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Name",
						"type": "varchar"
					},
					{
						"name": "Phone",
						"type": "varchar"
					},
					{
						"name": "Last_m",
						"type": "date"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "tbluser"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureSqlDatabase_source_user')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_dataflow_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage_appsource",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Sales_File_2020_USA_UK_IND.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Year",
						"type": "String"
					},
					{
						"name": "Product_Type",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage_appsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_github_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_datalake_github_sink",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pFilename": {
						"type": "string"
					}
				},
				"folder": {
					"name": "github_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().pFilename",
							"type": "Expression"
						},
						"folderPath": "csv",
						"fileSystem": "githubdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_datalake_github_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_github_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_github_source",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"pRelativeGitURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "github_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation",
						"relativeUrl": {
							"value": "@dataset().pRelativeGitURL",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_github_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_input_left')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_joins_left_source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "cases_deaths.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_joins_left_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_input_right')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_joins_right_sources",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "case_deaths_uk_ind_only.csv",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "country_code",
						"type": "String"
					},
					{
						"name": "continent",
						"type": "String"
					},
					{
						"name": "population",
						"type": "String"
					},
					{
						"name": "indicator",
						"type": "String"
					},
					{
						"name": "daily_count",
						"type": "String"
					},
					{
						"name": "date",
						"type": "String"
					},
					{
						"name": "rate_14_day",
						"type": "String"
					},
					{
						"name": "source",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_joins_right_sources')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_listoffiles_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_listfiles_source",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "github_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ListOfFiles.csv",
						"folderPath": "demo",
						"fileSystem": "githubdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "No",
						"type": "String"
					},
					{
						"name": "FullURL",
						"type": "String"
					},
					{
						"name": "BaseURL",
						"type": "String"
					},
					{
						"name": "SourceRelativeURL",
						"type": "String"
					},
					{
						"name": "FileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_listfiles_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_DelimitedText_app_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_AzureDataLakeStorage_app_sink",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "result"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_AzureDataLakeStorage_app_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_DelimitedText_app_source')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_AzureDataLakeStorage_appsource",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Data.txt",
						"fileSystem": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Data",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_AzureDataLakeStorage_appsource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_dataflow_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_dataflow_output",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "result"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_dataflow_output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_git_sourceeeee_demo')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_joins_right_source",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "ListOfFiles.csv",
						"folderPath": "demo",
						"fileSystem": "githubdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "No",
						"type": "String"
					},
					{
						"name": "FullURL",
						"type": "String"
					},
					{
						"name": "BaseURL",
						"type": "String"
					},
					{
						"name": "SourceRelativeURL",
						"type": "String"
					},
					{
						"name": "FileName",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_joins_right_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ds_joins_output_sink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_joins_sink_result",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Dataflow_datasets"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": "result"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Id",
						"type": "String"
					},
					{
						"name": "Sales",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_joins_sink_result')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureDataLakeStorage_appsource')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_AzureDataLakeStorage_appsource_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_AzureDataLakeStorage_appsource_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase_destination')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSqlDatabase_destination_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_AzureSqlDatabase_source_user')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_AzureSqlDatabase_source_user_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_dataflow_output')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_dataflow_output_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_dataflow_output_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_datalake_github_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_datalake_github_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_datalake_github_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_github_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('LS_github_source_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_joins_left_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_joins_left_source_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_joins_left_source_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_joins_right')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_joins_right_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_joins_right_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_joins_right_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_joins_right_source_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_joins_right_source_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_joins_right_sources')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_joins_right_sources_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_joins_right_sources_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_joins_sink_result')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_joins_sink_result_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_joins_sink_result_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_listfiles_source')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('LS_listfiles_source_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('LS_listfiles_source_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_AzureDataLakeStorage_app_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('Ls_AzureDataLakeStorage_app_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('Ls_AzureDataLakeStorage_app_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_joins_sink')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_joins_sink_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_joins_sink_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tr_ingest_git_to_adls_1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "PL_http_github_source",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2022-04-28T07:55:02Z",
						"timeZone": "UTC"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/PL_http_github_source')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Joins_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_input_left",
								"type": "DatasetReference"
							},
							"name": "leftinput"
						},
						{
							"dataset": {
								"referenceName": "DS_input_right",
								"type": "DatasetReference"
							},
							"name": "rightinput"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_joins_output_sink",
								"type": "DatasetReference"
							},
							"name": "joinsresults"
						}
					],
					"transformations": [
						{
							"name": "joinsdemo"
						}
					],
					"scriptLines": [
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as string,",
						"          indicator as string,",
						"          daily_count as string,",
						"          date as string,",
						"          rate_14_day as string,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> leftinput",
						"source(output(",
						"          country as string,",
						"          country_code as string,",
						"          continent as string,",
						"          population as string,",
						"          indicator as string,",
						"          daily_count as string,",
						"          date as string,",
						"          rate_14_day as string,",
						"          source as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> rightinput",
						"leftinput, rightinput join(leftinput@country_code == rightinput@country_code,",
						"     joinType:'inner',",
						"     partitionBy('hash', 1),",
						"     broadcast: 'auto')~> joinsdemo",
						"joinsdemo sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['joins_output_result'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> joinsresults"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_input_left')]",
				"[concat(variables('factoryId'), '/datasets/DS_input_right')]",
				"[concat(variables('factoryId'), '/datasets/Ds_joins_output_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Sortbysales')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_dataflow_source",
								"type": "DatasetReference"
							},
							"name": "Inputsource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "sortedsalessink"
						},
						{
							"dataset": {
								"referenceName": "Ds_dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "sortedcountrysink"
						}
					],
					"transformations": [
						{
							"name": "sortedcountry"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          Year as string,",
						"          Product_Type as string,",
						"          Sales as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Inputsource",
						"Inputsource sort(desc(Country, true),",
						"     partitionBy('hash', 1)) ~> sortedcountry",
						"sortedcountry sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['sortedsalesvalues'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sortedsalessink",
						"sortedcountry sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['sortedcountry'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sortedcountrysink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_dataflow_source')]",
				"[concat(variables('factoryId'), '/datasets/Ds_dataflow_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/aggregates_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_dataflow_source",
								"type": "DatasetReference"
							},
							"name": "DataSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "DataAggregate"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          Year as string,",
						"          Product_Type as string,",
						"          Sales as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> DataSource",
						"DataSource aggregate(groupBy(Country),",
						"     Total_Sales = sum(toInteger(Sales)),",
						"          Max_sales = max(toInteger(Sales)),",
						"          Min_sales = min(toInteger(Sales)),",
						"     partitionBy('hash', 1)) ~> DataAggregate",
						"DataAggregate sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['Countrywise_sales_report'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_dataflow_source')]",
				"[concat(variables('factoryId'), '/datasets/Ds_dataflow_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/conditional_split_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_dataflow_source",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "DEFAULTsink"
						}
					],
					"transformations": [
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          Year as string,",
						"          Product_Type as string,",
						"          Sales as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> source1",
						"source1 split(Country==\"USA\"||Country==\"UK\",",
						"     disjoint: false) ~> split1@(ukandus)",
						"split1@ukandus sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['default _stream_sales'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> DEFAULTsink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_dataflow_source')]",
				"[concat(variables('factoryId'), '/datasets/Ds_dataflow_sink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/select_columns_df')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DS_dataflow_source",
								"type": "DatasetReference"
							},
							"name": "selectsales"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "Ds_dataflow_sink",
								"type": "DatasetReference"
							},
							"name": "selectedcolumns"
						}
					],
					"transformations": [
						{
							"name": "selectrequiredcolumns"
						}
					],
					"scriptLines": [
						"source(output(",
						"          Country as string,",
						"          Year as string,",
						"          Product_Type as string,",
						"          Sales as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> selectsales",
						"selectsales select(mapColumn(",
						"          Salesyear = Year,",
						"          Country,",
						"          Sales",
						"     ),",
						"     partitionBy('hash', 1),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> selectrequiredcolumns",
						"selectrequiredcolumns sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Id as string,",
						"          Sales as string",
						"     ),",
						"     partitionFileNames:['specifiedcolumns'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> selectedcolumns"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_dataflow_source')]",
				"[concat(variables('factoryId'), '/datasets/Ds_dataflow_sink')]"
			]
		}
	]
}